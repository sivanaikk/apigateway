name: CI - CD Build @ hsn-details
on:
  push:
    branches:
      - DevOps
  pull_request:
    branches: 
      - DevOps
      

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      MODULE_NAME: apigateway
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.8.2
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      
      - name: Build with Maven
        run: mvn -B package --file  ${{ env.MODULE_NAME }}/pom.xml -DskipTests    
      
        
      - name: Persistent workflow data as artificats 
        uses: actions/upload-artifact@v2
        with: 
          name: github-actions-artifact
          path: ${{ env.MODULE_NAME }}/target   
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_R }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_R }}
          region: ap-south-1
          
 #     - name: Configure AWS Credentials
 #       uses: aws-actions/configure-aws-credentials@v1
 #       with:
 #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_R }}
 #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_R }}
 #         aws-region: ap-south-1  
      
 #     - name: Create repository 
 #       run: aws ecr create-repository --repository-name hsn-details  # repository name
          
          
      - name: Build and Push to ECR
        run: |
         docker build -t ${{ env.MODULE_NAME }}  .  
         docker tag ${{ env.MODULE_NAME }}  ${{ steps.ecr.outputs.account }}.dkr.ecr.ap-south-1.amazonaws.com/${{ env.MODULE_NAME }}:latest  
         docker push ${{ steps.ecr.outputs.account }}.dkr.ecr.ap-south-1.amazonaws.com/${{ env.MODULE_NAME }}:latest         
      
      - name: Deploy
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_R }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_R }}
          aws_region: ap-south-1 # we can edit 
          cluster_name: Microservice-K8S-Cluster # we can edit
        with:
          args: |
            kubectl apply -f  k8s/${{ env.MODULE_NAME }}.yml

    
      
       
